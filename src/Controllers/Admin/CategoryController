<?php
namespace App\Controllers\Admin;

use App\Core\Controller;

class CategoryController extends Controller
{
    /** GET /admin/categories (view) */
    public function index() {
        return $this->view('admin/categories/category');
    }

    /** GET /admin/api/categories (list JSON) */
    public function apiIndex() {
        $pdo = \App\Core\DB::pdo();
        $sql = "SELECT c.id, c.name, c.slug, c.parent_id, c.sort_order, c.is_active, c.created_at,
                       p.name AS parent_name
                FROM categories c
                LEFT JOIN categories p ON p.id = c.parent_id
                ORDER BY c.id DESC";
        $rows = $pdo->query($sql)->fetchAll(\PDO::FETCH_ASSOC);
        echo json_encode($rows); exit;
    }

    /** POST /admin/categories (create) */
    public function store() {
        $pdo  = \App\Core\DB::pdo();
        $data = json_decode(file_get_contents('php://input'), true) ?? [];

        $name        = trim($data['name'] ?? '');
        $slug        = trim($data['slug'] ?? '');
        $parent_id   = $data['parent_id'] !== '' ? ($data['parent_id'] ?? null) : null;
        $sort_order  = (int)($data['sort_order'] ?? 0);
        $is_active   = !empty($data['is_active']) ? 1 : 0;

        if ($name === '') { http_response_code(422); echo json_encode(['error'=>'Tên là bắt buộc']); exit; }
        if ($slug === '') { $slug = $this->slugify($name); }
        if ($parent_id !== null) { $parent_id = (int)$parent_id; }

        $stmt = $pdo->prepare("INSERT INTO categories(name, slug, parent_id, sort_order, is_active)
                               VALUES (:name, :slug, :parent_id, :sort_order, :is_active)");
        $stmt->execute([
            ':name'       => $name,
            ':slug'       => $slug ?: null,
            ':parent_id'  => $parent_id,
            ':sort_order' => $sort_order,
            ':is_active'  => $is_active,
        ]);

        $id = $pdo->lastInsertId();
        echo json_encode($this->findOne($id)); exit;
    }

    /** POST /admin/categories/{id} (update) */
    public function update($id) {
        $pdo  = \App\Core\DB::pdo();
        $data = json_decode(file_get_contents('php://input'), true) ?? [];

        $name        = trim($data['name'] ?? '');
        $slug        = trim($data['slug'] ?? '');
        $parent_id   = array_key_exists('parent_id', $data) && $data['parent_id'] !== '' ? (int)$data['parent_id'] : null;
        $sort_order  = (int)($data['sort_order'] ?? 0);
        $is_active   = !empty($data['is_active']) ? 1 : 0;

        if ($name === '') { http_response_code(422); echo json_encode(['error'=>'Tên là bắt buộc']); exit; }
        if ((string)$parent_id === (string)$id) { http_response_code(422); echo json_encode(['error'=>'Loại cha không thể là chính nó']); exit; }
        if ($slug === '') { $slug = $this->slugify($name); }

        $stmt = $pdo->prepare("UPDATE categories
                               SET name=:name, slug=:slug, parent_id=:parent_id, sort_order=:sort_order, is_active=:is_active
                               WHERE id=:id");
        $stmt->execute([
            ':id'         => $id,
            ':name'       => $name,
            ':slug'       => $slug ?: null,
            ':parent_id'  => $parent_id,
            ':sort_order' => $sort_order,
            ':is_active'  => $is_active,
        ]);

        echo json_encode($this->findOne($id)); exit;
    }

    /** POST /admin/categories/{id}/delete (delete) */
    public function destroy($id) {
        $pdo = \App\Core\DB::pdo();
        // Optional: chặn xoá nếu đang là parent của thằng khác
        $chk = $pdo->prepare("SELECT COUNT(*) FROM categories WHERE parent_id = ?");
        $chk->execute([$id]);
        if ($chk->fetchColumn() > 0) {
            http_response_code(409);
            echo json_encode(['error'=>'Không thể xoá: đang là loại cha của mục khác']); exit;
        }

        $pdo->prepare("DELETE FROM categories WHERE id=?")->execute([$id]);
        echo json_encode(['ok'=>true]); exit;
    }

    /** Helper: lấy 1 bản ghi */
    private function findOne($id){
        $pdo = \App\Core\DB::pdo();
        $st = $pdo->prepare("SELECT id, name, slug, parent_id, sort_order, is_active, created_at FROM categories WHERE id=?");
        $st->execute([$id]);
        return $st->fetch(\PDO::FETCH_ASSOC);
    }

    /** Helper: tạo slug đơn giản */
    private function slugify($text) {
        $text = mb_strtolower($text, 'UTF-8');
        $text = preg_replace('~[^\pL0-9]+~u', '-', $text);
        $text = trim($text, '-');
        $text = preg_replace('~[^-a-z0-9]+~', '', $text);
        return $text ?: null;
    }
}
